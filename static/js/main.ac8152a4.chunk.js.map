{"version":3,"sources":["Components/Table.js","Components/DropdownTable.js","App.js","fonts/Starjedi.ttf","index.js"],"names":["Table","planetsData","useState","data","setData","setOrder","sortParam","setSortParam","arrParam","setArrParam","sortByASC","sortBy","sortedData","sort","a","b","sortByDESC","className","onClick","map","planet","id","name","rotationPeriod","orbitalPeriod","diameter","climates","surfaceWater","population","climate","index","Dropdown","filmData","toggleBody","setToggleBody","title","e","App","films","film","planets","filter","filmConnection","f","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac8152a4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Table = ({ planetsData }) => {\r\n  const [data, setData] = useState(planetsData);\r\n  const [order, setOrder] = useState(\"ASC\");\r\n  const [sortParam, setSortParam] = useState(\"\");\r\n  const [arrParam, setArrParam] = useState(\"\");\r\n\r\n  const sortByASC = (sortBy) => {\r\n    const sortedData = data.sort((a, b) => (a[sortBy] < b[sortBy] ? -1 : 1));\r\n    setData(sortedData);\r\n    setOrder(\"DESC\");\r\n    setSortParam(sortBy);\r\n    setArrParam(\"sortArrowUp\");\r\n  };\r\n\r\n  const sortByDESC = (sortBy) => {\r\n    const sortedData = data.sort((a, b) => (a[sortBy] > b[sortBy] ? -1 : 1));\r\n    setData(sortedData);\r\n    setOrder(\"ASC\");\r\n    setSortParam(sortBy);\r\n    setArrParam(\"sortArrowDown\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"tab\">\r\n      <table className=\"tablePlanet\">\r\n        <thead className=\"borderTab\">\r\n          <tr>\r\n            <th className={sortParam === \"name\" && \"sortNameColor\"}>\r\n              <div className=\"sortArrowContainer\">\r\n                <p>Planet Name </p>\r\n                <div className=\"sortArrow\">\r\n                  <span\r\n                    className={\r\n                      \"sortArrowUp \" +\r\n                      ((sortParam === \"name\") & (arrParam === \"sortArrowUp\")\r\n                        ? \"sortNameColor arrowUpColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByASC(\"name\")}\r\n                  ></span>\r\n                  <span\r\n                    className={\r\n                      \"sortArrowDown \" +\r\n                      ((sortParam === \"name\") & (arrParam === \"sortArrowDown\")\r\n                        ? \"sortNameColor arrowDownColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByDESC(\"name\")}\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className={sortParam === \"rotationPeriod\" && \"sortNameColor\"}>\r\n              <div className=\"sortArrowContainer\">\r\n                <p>Rotation period </p>\r\n                <div className=\"sortArrow\">\r\n                  <span\r\n                    className={\r\n                      \"sortArrowUp \" +\r\n                      ((sortParam === \"rotationPeriod\") &\r\n                      (arrParam === \"sortArrowUp\")\r\n                        ? \"sortNameColor arrowUpColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByASC(\"rotationPeriod\")}\r\n                  ></span>\r\n                  <span\r\n                    className={\r\n                      \"sortArrowDown \" +\r\n                      ((sortParam === \"rotationPeriod\") &\r\n                      (arrParam === \"sortArrowDown\")\r\n                        ? \"sortNameColor arrowDownColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByDESC(\"rotationPeriod\")}\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className={sortParam === \"orbitalPeriod\" && \"sortNameBlue\"}>\r\n              <div className=\"sortArrowContainer\">\r\n                <p>Orbital period</p>\r\n                <div className=\"sortArrow\">\r\n                  <span\r\n                    className={\r\n                      \"sortArrowUp \" +\r\n                      ((sortParam === \"orbitalPeriod\") &\r\n                      (arrParam === \"sortArrowUp\")\r\n                        ? \"sortNameColor arrowUpColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByASC(\"orbitalPeriod\")}\r\n                  ></span>\r\n                  <span\r\n                    className={\r\n                      \"sortArrowDown \" +\r\n                      ((sortParam === \"orbitalPeriod\") &\r\n                      (arrParam === \"sortArrowDown\")\r\n                        ? \"sortNameColor arrowDownColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByDESC(\"orbitalPeriod\")}\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className={sortParam === \"diameter\" && \"sortNameColor\"}>\r\n              <div className=\"sortArrowContainer\">\r\n                <p>Diameter</p>\r\n                <div className=\"sortArrow\">\r\n                  <span\r\n                    className={\r\n                      \"sortArrowUp \" +\r\n                      ((sortParam === \"diameter\") & (arrParam === \"sortArrowUp\")\r\n                        ? \"sortNameColor arrowUpColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByASC(\"diameter\")}\r\n                  ></span>\r\n                  <span\r\n                    className={\r\n                      \"sortArrowDown \" +\r\n                      ((sortParam === \"diameter\") &\r\n                      (arrParam === \"sortArrowDown\")\r\n                        ? \"sortNameColor arrowDownColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByDESC(\"diameter\")}\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className={sortParam === \"climates\" && \"sortNameColor\"}>\r\n              <div className=\"sortArrowContainer\">\r\n                <p>Climate</p>\r\n                <div className=\"sortArrow\">\r\n                  <span\r\n                    className={\r\n                      \"sortArrowUp \" +\r\n                      ((sortParam === \"climates\") & (arrParam === \"sortArrowUp\")\r\n                        ? \"sortNameColor arrowUpColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByASC(\"climates\")}\r\n                  ></span>\r\n                  <span\r\n                    className={\r\n                      \"sortArrowDown \" +\r\n                      ((sortParam === \"climates\") &\r\n                      (arrParam === \"sortArrowDown\")\r\n                        ? \"sortNameColor arrowDownColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByDESC(\"climates\")}\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className={sortParam === \"surfaceWater\" && \"sortNameColor\"}>\r\n              <div className=\"sortArrowContainer\">\r\n                <p>Surface water</p>\r\n                <div className=\"sortArrow\">\r\n                  <span\r\n                    className={\r\n                      \"sortArrowUp \" +\r\n                      ((sortParam === \"surfaceWater\") &\r\n                      (arrParam === \"sortArrowUp\")\r\n                        ? \"sortNameColor arrowUpColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByASC(\"surfaceWater\")}\r\n                  ></span>\r\n                  <span\r\n                    className={\r\n                      \"sortArrowDown \" +\r\n                      ((sortParam === \"surfaceWater\") &\r\n                      (arrParam === \"sortArrowDown\")\r\n                        ? \"sortNameColor arrowDownColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByDESC(\"surfaceWater\")}\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className={sortParam === \"population\" && \"sortNameColor\"}>\r\n              <div className=\"sortArrowContainer\">\r\n                <p>Population</p>\r\n                <div className=\"sortArrow\">\r\n                  <span\r\n                    className={\r\n                      \"sortArrowUp \" +\r\n                      ((sortParam === \"population\") &\r\n                      (arrParam === \"sortArrowUp\")\r\n                        ? \"sortNameColor arrowUpColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByASC(\"population\")}\r\n                  ></span>\r\n                  <span\r\n                    className={\r\n                      \"sortArrowDown \" +\r\n                      ((sortParam === \"population\") &\r\n                      (arrParam === \"sortArrowDown\")\r\n                        ? \"sortNameColor arrowDownColor\"\r\n                        : \"\")\r\n                    }\r\n                    onClick={() => sortByDESC(\"population\")}\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((planet) => {\r\n            const {\r\n              id,\r\n              name,\r\n              rotationPeriod,\r\n              orbitalPeriod,\r\n              diameter,\r\n              climates,\r\n              surfaceWater,\r\n              population,\r\n            } = planet;\r\n            return (\r\n              <tr key={id}>\r\n                <td\r\n                  className={\r\n                    \"name \" + (sortParam === \"name\" ? \"sortNameColor\" : \"\")\r\n                  }\r\n                >\r\n                  {name ? name : \"n/d\"}\r\n                </td>\r\n                <td\r\n                  className={sortParam === \"rotationPeriod\" && \"sortNameColor\"}\r\n                >\r\n                  {rotationPeriod ? rotationPeriod : \"n/d\"}\r\n                </td>\r\n                <td\r\n                  className={sortParam === \"orbitalPeriod\" && \"sortNameColor\"}\r\n                >\r\n                  {orbitalPeriod ? orbitalPeriod : \"n/d\"}\r\n                </td>\r\n                <td className={sortParam === \"diameter\" && \"sortNameColor\"}>\r\n                  {diameter ? diameter : \"n/d\"}\r\n                </td>\r\n                <td className={sortParam === \"climates\" && \"sortNameColor\"}>\r\n                  {climates ? (\r\n                    <ul>\r\n                      {climates.map((climate, index) => (\r\n                        <li key={index}>{climate}</li>\r\n                      ))}\r\n                    </ul>\r\n                  ) : (\r\n                    \"n/d\"\r\n                  )}\r\n                </td>\r\n                <td className={sortParam === \"surfaceWater\" && \"sortNameColor\"}>\r\n                  {surfaceWater ? surfaceWater : \"n/d\"}\r\n                </td>\r\n                <td className={sortParam === \"population\" && \"sortNameColor\"}>\r\n                  {population ? population : \"n/d\"}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport Table from \"./Table\";\r\n\r\nconst Dropdown = ({ filmData, planetsData }) => {\r\n  const [toggleBody, setToggleBody] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"film\">\r\n        <h3>{filmData.title}</h3>\r\n        <span\r\n          onClick={(e) => {\r\n            setToggleBody(!toggleBody);\r\n          }}\r\n        >\r\n          <span className={\"arrow \" + (toggleBody ? \"filmArrUp\" : \"\")}>\r\n            <i\r\n              className={\r\n                \"filmArrow filmArrDown \" + (toggleBody ? \"upArrowActive\" : \"\")\r\n              }\r\n            ></i>\r\n          </span>\r\n        </span>\r\n      </div>\r\n      {toggleBody && <Table planetsData={planetsData} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import Dropdown from \"./Components/DropdownTable\";\nimport { data } from \"./data\";\n\nfunction App() {\n  const getPlanetsData = (id) => {\n    const planetsData = data.planets.filter((planet) => {\n      if (planet.filmConnection.films.filter((f) => f.id === id).length > 0) {\n        return true;\n      }\n    });\n\n    return planetsData;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <div className=\"title\">\n          <h2>{\"FRoNT-END\"}</h2>\n          <h4>{\"Recruitment Task\"}</h4>\n        </div>\n        <div className=\"content\">\n          {data.films.map((film) => (\n            <Dropdown\n              key={film.id}\n              filmData={film}\n              planetsData={getPlanetsData(film.id)}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/Starjedi.4c37e50c.ttf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./fonts/Starjedi.ttf\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}